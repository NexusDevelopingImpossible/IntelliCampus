<link rel="stylesheet" href="<%= assetPath('css/addSection.css') %>" />

<div class="main-page">
  <div class="blur">
    <div class="page-heading">
      <a href="/admin/dashboard"
        ><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960">
          <path
            d="M381-100 44-436q-9-9-13.5-20.5T26-480q0-12 4.5-23.5T44-524l337-337q21-21 51-21.5t52 21.5q21 21 21 51.5T484-758L206-480l278 278q21 21 21.5 50.5T484-100q-21 21-51.5 21T381-100Z"
          />
        </svg>
      </a>
      <h1 class="heading">Add Students in Section</h1>
    </div>
    
    <div class="main__content">
      <form
      action="/admin/section/addstudent"
      method="post"
      enctype="multipart/form-data"
    >
      <div class="header">
        <div>
        <select id="department" class="filter-select" name="department">
          <option value="" disabled selected>Department</option>
        </select>
        <select id="course" class="filter-select" name="course">
          <option value="" disabled selected>Course</option>
        </select>
        <select id="semester" class="filter-select" name="semester">
          <option value="" disabled selected>Semester</option>
        </select>
        <select id="section" class="filter-select" name="section">
          <option value="" disabled selected>Section</option>
        </select>
      </div>
        <div class="input-file">
          <a href="..\..\data\template_section.xlsx">
            <div class="template-btn btn btn-outline" type="submit">
              Template
            </div>
          </a>
          <div class="upload-part">
          <div class="custom-file-upload">
            <label>
              <input id="select-file" type="file" name="fileexcel" required />
              <span id="file-name">Import your file here</span>
            </label>
            <span style="display: none" class="import-icon"
              ><svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="#FFFFFF"
              >
                <path d="M0 0h24v24H0V0z" fill="none" />
                <path
                  d="M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z"
                />
              </svg>
            </span>
          </div>
          <button id="submit-btn" class="submit-btn btn btn-full">
            Submit
          </button>
        </div>
        </div>
      </div>
    </form>
    <div class="description">
      <div class="section__title">
        <span>SI. No</span>
        <span>Registration No</span>
        <span>Subject Name</span>
        <span>Section</span>
      </div>
      <div class="student__section__list" id="student_list">
      </div>
    </div>
    </div>
  </div>
</div>
<script>
  let v = <%- JSON.stringify(locals.semsec) %>;
  const data = v;
  const departmentSelect = document.getElementById("department");
  const courseSelect = document.getElementById("course");
  const semesterSelect = document.getElementById("semester");
  const sectionSelect = document.getElementById("section");

  // Function to populate select options
  function populateOptions(selectElement, options) {
    selectElement.innerHTML = "";
    options.forEach((option) => {
      const { value, text } = option;
      const optionElement = document.createElement("option");
      optionElement.value = value;
      optionElement.textContent = text;
      selectElement.appendChild(optionElement);
    });
  }

  // Function to filter unique values from an array of objects
  function getUniqueValues(array, key) {
    return [...new Set(array.map((item) => item[key]))];
  }

  // Function to filter data based on selected filters
  function filterData() {
    const selectedDepartment = departmentSelect.value;
    const selectedCourse = courseSelect.value;
    const selectedSemester = semesterSelect.value;

    // Filter the data based on the selected filters
    const filteredData = data.filter((item) => {
      return (
        (selectedDepartment === "" || item.department === selectedDepartment) &&
        (selectedCourse === "" || item.course === selectedCourse) &&
        (selectedSemester === "" ||
          item.semester.toString() === selectedSemester) // Compare as strings
      );
    });

    // Populate semester options based on the filtered data
    const semesters = getUniqueValues(filteredData, "semester");
    const semesterOptions = semesters.map((semester) => ({
      value: semester,
      text: `${semester}`,
    }));
    populateOptions(semesterSelect, [
      { value: "", text: "Semester" },
      ...semesterOptions,
    ]);

    // When semester changes, update the section options as well
    filterSections();
  }

  // Function to filter section options based on the selected filters
  function filterSections() {
    const selectedDepartment = departmentSelect.value;
    const selectedCourse = courseSelect.value;
    const selectedSemester = semesterSelect.value;

    // Filter the data based on the selected filters
    const filteredData = data.filter((item) => {
      return (
        (selectedDepartment === "" || item.department === selectedDepartment) &&
        (selectedCourse === "" || item.course === selectedCourse) &&
        (selectedSemester === "" ||
          item.semester.toString() === selectedSemester) // Compare as strings
      );
    });

    // Populate section options based on the filtered data
    const sections = getUniqueValues(filteredData, "section");
    const sectionOptions = sections.map((section) => ({
      value: section,
      text: `${section}`,
    }));
    populateOptions(sectionSelect, [
      { value: "", text: "Section" },
      ...sectionOptions,
    ]);
  }

  // Event listeners for select elements
  departmentSelect.addEventListener("change", filterData);
  courseSelect.addEventListener("change", filterData);
  semesterSelect.addEventListener("change", filterSections); // Update sections when semester changes

  // Populate initial options for department and course selects
  const departments = getUniqueValues(data, "department");
  const departmentOptions = departments.map((department) => ({
    value: department,
    text: department,
  }));
  populateOptions(departmentSelect, [
    { value: "", text: "Department" },
    ...departmentOptions,
  ]);

  const courses = getUniqueValues(data, "course");
  const courseOptions = courses.map((course) => ({
    value: course,
    text: course,
  }));
  populateOptions(courseSelect, [
    { value: "", text: "Course" },
    ...courseOptions,
  ]);
  let selectFile = document.getElementById("select-file");
  let fileName = document.getElementById("file-name");
  let importIcon = document.querySelector(".import-icon");
  let submitBtn = document.querySelector("#submit-btn");

  selectFile.addEventListener("change", function (e) {
    console.log(selectFile.files[0].name);
    fileName.innerHTML = selectFile.files[0].name.slice(0, 20) + "..";
  });

  selectFile.addEventListener("change", function () {
    if (selectFile.files.length > 0) {
      importIcon.style.display = "block";
      submitBtn.style.opacity = "1";
    }
  });

  importIcon.addEventListener("mousedown", function (e) {
    e.preventDefault(); // Prevents the default behavior of the click event
    selectFile.value = "";
    fileName.innerHTML = "Import your file here";
    importIcon.style.display = "none";
    submitBtn.style.opacity = "0.4";
  });

  let sectiondata = document.getElementById("section");
  section.addEventListener("change", function () {
    getsectiondata();
  });
  let getsectiondata = function () {
    $.ajax({
      type: "get",
      url: "/admin/section/searchstudent",
      data: {
        department: departmentSelect.value,
        course: courseSelect.value,
        semester: semesterSelect.value,
        section: section.value,
      },
      success: function(data){
        const nAtt = newattDom(data.studentlist);

      }
    });
  };
  let newattDom = function (data) {
    let listDOM = '';
    for (let i = 0; i < data.length; i++) {
      listDOM = listDOM + `<div class="list">
          <span>`+(i+1)+`</span>
          <span>${data[i].username}</span>
          <span>${data[i].name}</span>
          <div class="section">
            <span>${data[i].section}</span>
            <button class="delete-btn">
              <svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 -960 960 960" width="1.85vw" fill="#fff"><path d="M261-120q-24.75 0-42.375-17.625T201-180v-570h-11q-12.75 0-21.375-8.675-8.625-8.676-8.625-21.5 0-12.825 8.625-21.325T190-810h158q0-13 8.625-21.5T378-840h204q12.75 0 21.375 8.625T612-810h158q12.75 0 21.375 8.675 8.625 8.676 8.625 21.5 0 12.825-8.625 21.325T770-750h-11v570q0 24.75-17.625 42.375T699-120H261Zm438-630H261v570h438v-570ZM367-266h60v-399h-60v399Zm166 0h60v-399h-60v399ZM261-750v570-570Z"/></svg>
            </button>
          </div>
        </div>`
    }
    $('#student_list').html(listDOM);
    return;
  };


</script>
