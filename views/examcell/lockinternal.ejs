<link rel="stylesheet" href="<%= assetPath('css/exam-lock-int.css') %>" />

<div class="main-page">
  <div class="blur">
    <div class="main__content">
      <div class="page-heading">
        <a href="/examcell/dashboard"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960">
            <path
              d="M381-100 44-436q-9-9-13.5-20.5T26-480q0-12 4.5-23.5T44-524l337-337q21-21 51-21.5t52 21.5q21 21 21 51.5T484-758L206-480l278 278q21 21 21.5 50.5T484-100q-21 21-51.5 21T381-100Z" />
          </svg>
        </a>
        <h1 class="heading">Lock Internals</h1>
      </div>
      <div class="allot__2" id="section2">
        <div class="teacher__and__btn">
          <form action="/examcell/lockinternal/lock" method="post" id="lockform">
            <div class="teacher__and__btn">
              <div class="filters">
                <select id="departmentSelect" class="filter-select" name="department" onchange="updateCourseSelect()"
                  required>
                  <option value="">Department</option>
                </select>
                <select id="courseSelect" class="filter-select" name="course" onchange="updateSemesterSelect()"
                  required>
                  <option value="">Course</option>
                </select>
                <select id="semesterSelect" class="filter-select" name="semester" required>
                  <option value="">Semester</option>
                </select>
              </div>
              <input class="filter-select date-select" type="datetime-local" name="lockdate" id="" />
            </div>
          </form>
          <button id="lock-btn" class="lock-btn btn btn-full">
            Lock
            <span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="1.5vw" fill="#FFFFFF">
                <g fill="none">
                  <path d="M0 0h24v24H0V0z" />
                  <path d="M0 0h24v24H0V0z" opacity=".87" />
                </g>
                <path
                  d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z" />
              </svg>
            </span>
          </button>
        </div>

        <div class="description">
          <div class="description__titles">
            <ul>
              <li>Sl.No</li>
              <li>Subject Name</li>
              <li>Type</li>
              <li>Core/Elective</li>
              <li>Credit</li>
              <li>Date</li>
            </ul>
          </div>
          <div class="description-scroll">
            <div class="description__list">
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
              <ul>
                <li>01</li>
                <li>
                  <span class="sub-code">IT-40322</span>Engineering Mathematics
                </li>
                <li>THEORY</li>
                <li>CORE</li>
                <li>3.0</li>
                <li></li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="popup">
    <div class="popup-item">
      <p class="popup-hed">You sure about locking all subject ?</p>
      <div class="action-btn">
        <span id="cross" class="cross act-btn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="4vw"
            fill="#FFFFFF">
            <path d="M0 0h24v24H0V0z" fill="none" opacity=".87" />
            <path
              d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm4.3 14.3c-.39.39-1.02.39-1.41 0L12 13.41 9.11 16.3c-.39.39-1.02.39-1.41 0-.39-.39-.39-1.02 0-1.41L10.59 12 7.7 9.11c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0L12 10.59l2.89-2.89c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 12l2.89 2.89c.38.38.38 1.02 0 1.41z" />
          </svg></span>
        <button onclick="submitform()">
          <span id="check" class="check act-btn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="4vw"
              fill="#9EFF00">
              <path d="M0 0h24v24H0V0z" fill="none" />
              <path
                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.29 16.29 5.7 12.7c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-7.59 7.59c-.38.39-1.02.39-1.41 0z" />
            </svg>
          </span>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  const lockBtn = document.getElementById("lock-btn");
  const cross = document.getElementById("cross");
  const popup = document.querySelector(".popup");

  lockBtn.addEventListener("click", function () {
    popup.style.display = "flex";
  });
  cross.addEventListener("click", function () {
    popup.style.display = "none";
  });
  function submitform() {
    document.getElementById('lockform').submit();
  }

  var departmentSelect = document.getElementById("departmentSelect");
  var courseSelect = document.getElementById("courseSelect");
  var semesterSelect = document.getElementById("semesterSelect");

  departmentSelect.addEventListener("change", updateCourseSelect);
  courseSelect.addEventListener("change", updateSemesterSelect);
  let u = <%- JSON.stringify(locals.deptSem) %>;
  let data = u;
  function updateDepartmentSelect() {

    var departments = [...new Set(data.map(item => item.department))];

    for (var i = 0; i < departments.length; i++) {
      var option = document.createElement("option");
      option.text = departments[i];
      option.value = departments[i];
      departmentSelect.appendChild(option);
    }
  }

  function updateCourseSelect() {
    var selectedDepartment = departmentSelect.value;

    courseSelect.innerHTML = "";
    semesterSelect.innerHTML = "";

    if (selectedDepartment) {
      var departmentData = data.filter(item => item.department === selectedDepartment);
      var courses = [...new Set(departmentData.map(item => item.course))];
      var option = document.createElement("option");
      option.text = "Course";
      courseSelect.appendChild(option);
      for (var i = 0; i < courses.length; i++) {
        var option = document.createElement("option");
        option.text = courses[i];
        option.value = courses[i];
        courseSelect.appendChild(option);
      }
    } else {
      var option = document.createElement("option");
      option.text = "Course";
      courseSelect.appendChild(option);
    }

    // After updating the course select, also update the semester select
    updateSemesterSelect();
  }

  function updateSemesterSelect() {
    let selectedDepartment = departmentSelect.value;
    let selectedCourse = courseSelect.value;

    semesterSelect.innerHTML = "";

    if (selectedDepartment && selectedCourse) {
      let departmentCourseData = data.filter(item => item.department === selectedDepartment && item.course === selectedCourse);
      let semesters = [...new Set(departmentCourseData.map(item => item.semester))];
      let option = document.createElement("option");
      option.text = "Semester";
      semesterSelect.appendChild(option);
      for (let i = 0; i < semesters.length; i++) {
        let option = document.createElement("option");
        option.text = semesters[i];
        option.value = semesters[i];
        semesterSelect.appendChild(option);
      }
    } else {
      let option = document.createElement("option");
      option.text = "Semester";
      semesterSelect.appendChild(option);
    }
  }

  // Call the update functions initially to load the selects dynamically
  updateDepartmentSelect();
  updateCourseSelect();
</script>